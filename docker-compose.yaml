version: '3.3'

services:
  backend:
    build:
      args:
      - NODE_ENV=development
      context: backend
    command: npm run start-watch
    container_name: '${APP_NAME}-api'
    environment:
      DATABASE_DB: '${DATABASE_DB}'
      DATABASE_USER: '${DATABASE_USER}'
      DATABASE_PASSWORD: '${DATABASE_PASSWORD}'
      DATABASE_HOST: '${DATABASE_HOST}'
      NODE_ENV: 'development'
    ports:
      - 80:80
      - 9229:9229
      - 9230:9230
    secrets:
      - db-password
    volumes:
      - ./backend/src:/code/src:ro
      - ./backend/package.json:/code/package.json
      - ./backend/package-lock.json:/code/package-lock.json
      - back-notused:/opt/app/node_modules
    networks:
      - public
      - private
    depends_on:
      - db
  db:
    image: mysql:8.0.19
    command: '--default-authentication-plugin=mysql_native_password'
    container_name: '${APP_NAME}-mysql'
    restart: always
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - private
    environment:
      MYSQL_DATABASE: '${MYSQL_DATABASE}'
      MYSQL_ROOT_PASSWORD_FILE: '/run/secrets/db-password'
  frontend:
    build:
      context: frontend
      # target: development
    container_name: '${APP_NAME}-frontend'
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/code/src
      - /code/node_modules
    networks:
      - public
    depends_on:
      - backend
networks:
  public:
  private:

volumes:
  back-notused:
  db-data:

secrets:
  db-password:
    file: db/password.txt
